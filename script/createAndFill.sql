/*=====================================================================
  1.  Схема БД  –  все таблицы, PK и FK
======================================================================*/
DROP SCHEMA IF EXISTS public CASCADE;
CREATE SCHEMA public;
SET search_path = public;

-- -------------------------------------------------
-- Таблицы‑справочники
-- -------------------------------------------------
CREATE TABLE IF NOT EXISTS "Positions" (
    "position_id"   INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "position_name" TEXT    NOT NULL,
    "hourly_rate"   NUMERIC NOT NULL,
    PRIMARY KEY ("position_id")
);

CREATE TABLE IF NOT EXISTS "Suppliers" (
    "supplier_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "name"        TEXT    NOT NULL,
    "contact"     TEXT    NOT NULL,
    PRIMARY KEY ("supplier_id")
);

CREATE TABLE IF NOT EXISTS "Partners" (
    "partner_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "partner_type"       TEXT    NOT NULL,
    "partner_director" TEXT NOT NULL,
    "name"       TEXT    NOT NULL,
    "address"    TEXT    NOT NULL,
    "email"    TEXT    NOT NULL,
    "phone" TEXT NOT NULL,
    "commission" NUMERIC NOT NULL,
    "rating"     NUMERIC NOT NULL,
    PRIMARY KEY ("partner_id")
);

-- -------------------------------------------------
-- Основные сущности
-- -------------------------------------------------
CREATE TABLE IF NOT EXISTS "Employees" (
    "employee_id"   INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "full_name"     TEXT    NOT NULL,
    "position_id"   INTEGER NOT NULL,
    "status"        TEXT    NOT NULL,
    "username"      TEXT    NOT NULL,
    "password_hash" TEXT,
    PRIMARY KEY ("employee_id")
);

CREATE TABLE IF NOT EXISTS "Clients" (
    "client_id"         INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "full_name"         TEXT    NOT NULL,
    "contact"           TEXT    NOT NULL,
    "registration_date" TIMESTAMP    NOT NULL,
    PRIMARY KEY ("client_id")
);

CREATE TABLE IF NOT EXISTS "Shifts" (
    "shift_id"    INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "employee_id" INTEGER NOT NULL,
    "shift_data"  DATE    NOT NULL,
    "start_time"  TIME    NOT NULL,
    "end_time"    TIME    NOT NULL,
    "status"      TEXT    NOT NULL,
    "hours_worked" NUMERIC,
    PRIMARY KEY ("shift_id")
);

CREATE TABLE IF NOT EXISTS "Materials" (
    "material_id"  INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "name"         TEXT    NOT NULL,
    "current_price" NUMERIC NOT NULL,
    "quantity"      NUMERIC NOT NULL,
    "unit"          TEXT    NOT NULL,
    "supplier_id"   INTEGER NOT NULL,
    PRIMARY KEY ("material_id")
);

CREATE TABLE IF NOT EXISTS "Services" (
    "service_id"           INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "service_name"         TEXT    NOT NULL,
    "description"          TEXT    NOT NULL,
    "price"                NUMERIC NOT NULL,
    "time_norm_hours"      NUMERIC NOT NULL,
    "required_position_id" INTEGER NOT NULL,
    PRIMARY KEY ("service_id")
);

CREATE TABLE IF NOT EXISTS "ServiceMaterials" (
    "service_id"      INTEGER NOT NULL,
    "material_id"     INTEGER NOT NULL,
    "consumption_norm" NUMERIC NOT NULL,
    "overuse_percent" NUMERIC NOT NULL,
    "service_coefficient" NUMERIC NOT NULL,
    PRIMARY KEY ("service_id", "material_id")
);

CREATE TABLE IF NOT EXISTS "Orders" (
    "order_id"      INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "client_id"     INTEGER NOT NULL,
    "service_id"    INTEGER NOT NULL,
    "partner_id"    INTEGER NOT NULL,
    "shift_id"      INTEGER NOT NULL,
    "order_date"    TIMESTAMP    NOT NULL,
    "completion_date" TIMESTAMP  NOT NULL,
    "status"        TEXT    NOT NULL,
    "cost_price"    NUMERIC NOT NULL,
    "final_price"   NUMERIC NOT NULL,
    "quantity" INT NOT NULL,
    PRIMARY KEY ("order_id")
);

CREATE TABLE IF NOT EXISTS "Deliveries" (
    "delivery_id"       INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "supplier_id"       INTEGER NOT NULL,
    "material_id"       INTEGER NOT NULL,
    "quantity_delivery" NUMERIC NOT NULL,
    "delivery_date"     TIMESTAMP    NOT NULL,
    "employee_id"       INTEGER NOT NULL,
    PRIMARY KEY ("delivery_id")
);

CREATE TABLE IF NOT EXISTS "ShiftEmployees" (
    "shift_id"    INTEGER NOT NULL,
    "employee_id" INTEGER NOT NULL,
    PRIMARY KEY ("shift_id", "employee_id")
);

CREATE TABLE IF NOT EXISTS "PartnersRatingHistory" (
    "history_id"   INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "partner_id"   INTEGER NOT NULL,
    "changed_at"   TIMESTAMP    NOT NULL,
    "old_rating"   NUMERIC NOT NULL,
    "new_rating"   NUMERIC NOT NULL,
    "changed_by"   INTEGER NOT NULL,
    "reason"       TEXT,
    PRIMARY KEY ("history_id")
);

-- -------------------------------------------------
-- Внешние ключи
-- -------------------------------------------------
ALTER TABLE "Employees"
    ADD CONSTRAINT fk_emp_position
        FOREIGN KEY ("position_id") REFERENCES "Positions" ("position_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "Shifts"
    ADD CONSTRAINT fk_shifts_employee
        FOREIGN KEY ("employee_id") REFERENCES "Employees" ("employee_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "Materials"
    ADD CONSTRAINT fk_materials_supplier
        FOREIGN KEY ("supplier_id") REFERENCES "Suppliers" ("supplier_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "Services"
    ADD CONSTRAINT fk_services_req_position
        FOREIGN KEY ("required_position_id") REFERENCES "Positions" ("position_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "ServiceMaterials"
    ADD CONSTRAINT fk_servmat_service
        FOREIGN KEY ("service_id") REFERENCES "Services" ("service_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_servmat_material
        FOREIGN KEY ("material_id") REFERENCES "Materials" ("material_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "Orders"
    ADD CONSTRAINT fk_orders_client
        FOREIGN KEY ("client_id") REFERENCES "Clients" ("client_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_orders_service
        FOREIGN KEY ("service_id") REFERENCES "Services" ("service_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_orders_partner
        FOREIGN KEY ("partner_id") REFERENCES "Partners" ("partner_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_orders_shift
        FOREIGN KEY ("shift_id") REFERENCES "Shifts" ("shift_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "Deliveries"
    ADD CONSTRAINT fk_deliveries_supplier
        FOREIGN KEY ("supplier_id") REFERENCES "Suppliers" ("supplier_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_deliveries_material
        FOREIGN KEY ("material_id") REFERENCES "Materials" ("material_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_deliveries_employee
        FOREIGN KEY ("employee_id") REFERENCES "Employees" ("employee_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "ShiftEmployees"
    ADD CONSTRAINT fk_shiftemployees_shift
        FOREIGN KEY ("shift_id") REFERENCES "Shifts" ("shift_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_shiftemployees_emp
        FOREIGN KEY ("employee_id") REFERENCES "Employees" ("employee_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "PartnersRatingHistory"
    ADD CONSTRAINT fk_prh_partner
        FOREIGN KEY ("partner_id") REFERENCES "Partners" ("partner_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    ADD CONSTRAINT fk_prh_changedby
        FOREIGN KEY ("changed_by") REFERENCES "Employees" ("employee_id")
        ON UPDATE NO ACTION ON DELETE NO ACTION;

/*=====================================================================
  2.  Триггеры
======================================================================*/
/* Триггер – подсчёт отработанных часов в смене */
CREATE OR REPLACE FUNCTION update_hours_worked()
RETURNS TRIGGER AS $$
BEGIN
    NEW.hours_worked := EXTRACT(EPOCH FROM (NEW.end_time - NEW.start_time)) / 3600;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_update_hours_worked
BEFORE INSERT OR UPDATE ON "Shifts"
FOR EACH ROW
EXECUTE FUNCTION update_hours_worked();



/*=====================================================================
  3.  Заполнение справочных таблиц
======================================================================*/
/* Позиции */
INSERT INTO "Positions" ("position_name", "hourly_rate") VALUES
    ('Администратор ИС',                70),
    ('Менеджер',                        50),
    ('Аналитик',                        45),
    ('Мастер по ремонту',               40),
    ('Сотрудник химчистки',             35),
    ('Партнер',                         30);

/* Поставщики */
INSERT INTO "Suppliers" ("name", "contact") VALUES
    ('ООО "Краски Сервис"',   'paint@mail.ru'),
    ('ООО "Инструмент"',      'tools@mail.ru'),
    ('ООО "ХимТех"',          'chem@mail.ru');

/* Партнёры */
INSERT INTO "Partners" ("name", "partner_type", "partner_director", "address", "email", "phone", "commission", "rating") VALUES
    ('Cerca Trova', 'Корпоративный клиент','Директор', 'ул. Ленина, 1',   'alpha@mail.ru', '79115556622', 5, 4.5),
    ('Хендерсон',  'Корпоративный клиент', 'Директор', 'ул. Пушкина, 10', 'beta@mail.ru', '79115556622', 10, 4.0);

/* Сотрудники */
INSERT INTO "Employees"
    ("full_name", "position_id", "status", "username", "password_hash")
VALUES
    ('Алексей Иванов',   1, 'Активен', 'ai',   'b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86'),
    ('Мария Петрова',    2, 'Активен', 'mp',   'b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86'),
    ('Олег Смирнов',     3, 'Активен', 'os',   'b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86'),
    ('Сергей Кузнецов',  4, 'Активен', 'sk',   'b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86'),
    ('Ольга Сидорова',   5, 'Активен', 'osid', 'b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86');

/* Клиенты */
INSERT INTO "Clients"
    ("full_name", "contact", "registration_date")
VALUES
    ('Алексей Кузнецов',   'alek@mail.ru',  '2025-10-01 14:35:00'),
    ('Мария Лебедева',     'maria@mail.ru', '2025-10-01 14:35:00'),
    ('Ирина Смирнова',     'irina@mail.ru', '2025-10-01 14:35:00');

/* Смены – hours_worked будет подсчитан триггером */
INSERT INTO "Shifts"
    ("employee_id", "shift_data", "start_time", "end_time", "status")
VALUES
    (1, '2025-10-01', '09:00', '17:00', 'Завершена'),
    (2, '2025-10-01', '09:00', '17:00', 'Завершена'),
    (3, '2025-10-01', '10:00', '18:00', 'Завершена'),
    (4, '2025-10-01', '11:00', '19:00', 'Завершена'),
    (5, '2025-10-01', '08:00', '16:00', 'Завершена');

/* Материалы */
INSERT INTO "Materials"
    ("name", "current_price", "quantity", "unit", "supplier_id")
VALUES
    ('Краска для ткани',      500, 100, 'л', 1),
    ('Кисть малярная',        150,  50, 'шт',2),
    ('Отбеливатель',          200,  30, 'л', 3),
    ('Стиральный порошок',   100, 100, 'кг',3),
    ('Кондиционер для белья',  80,  50, 'л', 3),
    ('Средство для химчистки',250,  40, 'л', 3);

/* Услуги */
INSERT INTO "Services"
    ("service_name", "description", "price", "time_norm_hours", "required_position_id")
VALUES
    ('Покраска одежды',     'Покраска одежды и текстиля',                     2000, 4, 4),
    ('Химчистка одежды',    'Химическая чистка костюмов и платьев',           1500, 3, 5),
    ('Стирка белья',        'Стирка и глажка белья',                          800, 2, 5);

/* Материалы, необходимые для услуг */
INSERT INTO "ServiceMaterials"
    ("service_id", "material_id", "consumption_norm", "overuse_percent", "service_coefficient")
VALUES
    (1, 1, 5, 0.1, 1.2),    -- покраска – краска
    (1, 2, 2, 0.2, 1.1),    -- покраска – кисти
    (2, 3, 1, 0.05, 1.0),   -- химчистка – отбеливатель
    (2, 6, 1, 0.05, 1.0),   -- химчистка – средство
    (3, 4, 0.5, 0.1, 1.0),  -- стирка – порошок
    (3, 5, 0.2, 0.1, 1.0);  -- стирка – кондиционер


/* Доставки материалов */
INSERT INTO "Deliveries"
    ("supplier_id", "material_id", "quantity_delivery", "delivery_date", "employee_id")
VALUES
    (1, 1, 20, '2025-10-01 14:35:00', 1),
    (2, 2, 10, '2025-10-01 14:35:00', 2),
    (3, 3, 15, '2025-10-01 14:35:00', 3);

/* Сотрудники, задействованные в сменах (Many‑to‑Many) */
INSERT INTO "ShiftEmployees"
    ("shift_id", "employee_id")
VALUES
    (1, 1),
    (2, 2),
    (3, 3),
    (4, 4),
    (5, 5);

/* Заказы (указываем уже созданный shift_id) */
INSERT INTO "Orders"
    ("client_id", "service_id", "partner_id", "shift_id", "order_date", "completion_date", "status", "cost_price", "final_price", "quantity")
VALUES
    (1, 1, 1, 1, '2025-10-01 14:35:00', '2025-10-01 14:35:00', 'Выполнен', 1000, 2000, 1),
    (2, 2, 2, 2, '2025-10-01 14:35:00', '2025-10-01 14:35:00', 'Выполнен',  700, 1500, 1),
    (3, 3, 2, 3, '2025-10-01 14:35:00', '2025-10-01 14:35:00', 'Выполнен',  400,  800, 1);

/* История изменения рейтинга партнёров */
INSERT INTO "PartnersRatingHistory"
    ("partner_id", "changed_at", "old_rating", "new_rating", "changed_by", "reason")
VALUES
    (1, '2025-10-01 14:35:00', 4.0, 4.5, 1, 'Успешное выполнение заказа'),
    (2, '2025-10-01 14:35:00', 3.5, 4.0, 2, 'Повышение за качество услуг');

/*=====================================================================
  Конец скрипта
======================================================================*/
COMMIT;
